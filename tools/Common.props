<?xml version="1.0" encoding="utf-8"?>
<Project>

  <!-- These properties are defaults for ALL project types. C#-specific things must go in Common.CS.props -->
  <PropertyGroup>
    <Configurations>Debug;Release</Configurations>
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
    <DebugType>portable</DebugType>
    <Deterministic>true</Deterministic>
    <ProduceReferenceAssembly>false</ProduceReferenceAssembly>
    
    <TargetFrameworks>net8.0;</TargetFrameworks>
    <!--<TargetFramework>net8.0</TargetFramework>-->
    <!-- If a project wants to target some subset or other set, then they can just reassign TargetFrameworks in their project file -->

    <NoWarn>$(NoWarn);NETSDK1138</NoWarn> <!-- Target framework is out of support -->
    
    <DisableImplicitFrameworkDefines>false</DisableImplicitFrameworkDefines>
    
    <!-- Properties for the repository paths -->
    <MMToolsPath>$(MSBuildThisFileDirectory)</MMToolsPath>
    <MMRootPath>$(MMToolsPath)..\</MMRootPath>
    <MMSourcePath>$(MMRootPath)src\</MMSourcePath>
    <MMArtifactsPath>$(MMRootPath)artifacts\</MMArtifactsPath>
    <MMExternalPath>$(MMRootPath)external\</MMExternalPath>
    <MMDocsPath>$(MMRootPath)docs\</MMDocsPath>

    <!-- These properties make the build outputs land out-of-source for easy fully clean rebuilds -->
    <PackageOutputPath>$(MMArtifactsPath)packages\$(Configuration)\</PackageOutputPath>
    <BaseIntermediateOutputPath>$(MMArtifactsPath)obj\$(MSBuildProjectName)\</BaseIntermediateOutputPath>
    <IntermediateOutputPath>$(BaseIntermediateOutputPath)$(Configuration)\</IntermediateOutputPath>
    <BaseOutputPath>$(MMArtifactsPath)bin\$(MSBuildProjectName)\</BaseOutputPath>
    
    <AppendTargetFrameworkToOutputPath>true</AppendTargetFrameworkToOutputPath>
    <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
  </PropertyGroup>
  
  <!-- Debug -->
  <PropertyGroup Condition="$(Configuration.Contains('Debug'))">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <DefineConstants>DEBUG;$(DefineConstants)</DefineConstants>
  </PropertyGroup>

  <!-- Release -->
  <PropertyGroup Condition="$(Configuration.Contains('Release'))">
    <Optimize>true</Optimize>
    <!--<DefineConstants>$(DefineConstants)</DefineConstants>-->
  </PropertyGroup>

  <!-- Trace -->
  <PropertyGroup Condition="$(Configuration.Contains('Trace'))">
    <DefineConstants>TRACE;$(DefineConstants)</DefineConstants>
  </PropertyGroup>
  
  <!-- NuGet Information -->
  <Import Project="$(MMToolsPath)NuGet.props" />
  
  <!-- Project Language information -->
  <PropertyGroup>
    <MMProjectLanguage>Unknown</MMProjectLanguage>
    <MMProjectLanguage Condition="'$(MSBuildProjectExtension)' == '.csproj'">CS</MMProjectLanguage>
    <MMProjectLanguage Condition="'$(MSBuildProjectExtension)' == '.ilproj'">IL</MMProjectLanguage>
    <MMProjectLanguage Condition="'$(UsingMicrosoftNoTargetsSdk)' == 'true'">NoTargets</MMProjectLanguage>
    <MMLanguageProps>$(MMToolsPath)Common.$(MMProjectLanguage).props</MMLanguageProps>
    <MMLanguageTargets>$(MMToolsPath)Common.$(MMProjectLanguage).targets</MMLanguageTargets>
  </PropertyGroup>
  
  <Import Project="$(MMLanguageProps)" Condition="Exists('$(MMLanguageProps)')" />

  <Import Project="$(MMImportAfterProps)" Condition="'$(MMImportAfterProps)' != '' and Exists('$(MMImportAfterProps)')" />
  
</Project>
